/**
 * This class is generated by jOOQ
 */
package com.markovlabs.eros.model.tables;


import com.markovlabs.eros.model.Eros;
import com.markovlabs.eros.model.Keys;
import com.markovlabs.eros.model.tables.records.EvaluationAnswersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EvaluationAnswers extends TableImpl<EvaluationAnswersRecord> {

	private static final long serialVersionUID = -267539724;

	/**
	 * The reference instance of <code>eros.EVALUATION_ANSWERS</code>
	 */
	public static final EvaluationAnswers EVALUATION_ANSWERS = new EvaluationAnswers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EvaluationAnswersRecord> getRecordType() {
		return EvaluationAnswersRecord.class;
	}

	/**
	 * The column <code>eros.EVALUATION_ANSWERS.ID</code>.
	 */
	public final TableField<EvaluationAnswersRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.EVALUATION_ANSWERS.DATER_ID</code>.
	 */
	public final TableField<EvaluationAnswersRecord, Long> DATER_ID = createField("DATER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.EVALUATION_ANSWERS.EVENT_ID</code>.
	 */
	public final TableField<EvaluationAnswersRecord, Long> EVENT_ID = createField("EVENT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.EVALUATION_ANSWERS.MATCH_ID</code>.
	 */
	public final TableField<EvaluationAnswersRecord, Long> MATCH_ID = createField("MATCH_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.EVALUATION_ANSWERS.QUESTION_ID</code>.
	 */
	public final TableField<EvaluationAnswersRecord, Long> QUESTION_ID = createField("QUESTION_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.EVALUATION_ANSWERS.ANSWER</code>.
	 */
	public final TableField<EvaluationAnswersRecord, String> ANSWER = createField("ANSWER", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>eros.EVALUATION_ANSWERS</code> table reference
	 */
	public EvaluationAnswers() {
		this("EVALUATION_ANSWERS", null);
	}

	/**
	 * Create an aliased <code>eros.EVALUATION_ANSWERS</code> table reference
	 */
	public EvaluationAnswers(String alias) {
		this(alias, EVALUATION_ANSWERS);
	}

	private EvaluationAnswers(String alias, Table<EvaluationAnswersRecord> aliased) {
		this(alias, aliased, null);
	}

	private EvaluationAnswers(String alias, Table<EvaluationAnswersRecord> aliased, Field<?>[] parameters) {
		super(alias, Eros.EROS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EvaluationAnswersRecord, Long> getIdentity() {
		return Keys.IDENTITY_EVALUATION_ANSWERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EvaluationAnswersRecord> getPrimaryKey() {
		return Keys.KEY_EVALUATION_ANSWERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EvaluationAnswersRecord>> getKeys() {
		return Arrays.<UniqueKey<EvaluationAnswersRecord>>asList(Keys.KEY_EVALUATION_ANSWERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<EvaluationAnswersRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<EvaluationAnswersRecord, ?>>asList(Keys.DATER_ID_FK_6, Keys.EVENT_ID_FK_6, Keys.MATCH_ID_FK_1, Keys.QUESTION_ID_FK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EvaluationAnswers as(String alias) {
		return new EvaluationAnswers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EvaluationAnswers rename(String name) {
		return new EvaluationAnswers(name, null);
	}
}
