/**
 * This class is generated by jOOQ
 */
package com.markovlabs.eros.model.tables;


import com.markovlabs.eros.model.Eros;
import com.markovlabs.eros.model.Keys;
import com.markovlabs.eros.model.enums.DaterGender;
import com.markovlabs.eros.model.tables.records.DaterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dater extends TableImpl<DaterRecord> {

	private static final long serialVersionUID = -258178545;

	/**
	 * The reference instance of <code>eros.DATER</code>
	 */
	public static final Dater DATER = new Dater();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DaterRecord> getRecordType() {
		return DaterRecord.class;
	}

	/**
	 * The column <code>eros.DATER.ID</code>.
	 */
	public final TableField<DaterRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.DATER.EMAIL</code>.
	 */
	public final TableField<DaterRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>eros.DATER.PWD</code>.
	 */
	public final TableField<DaterRecord, String> PWD = createField("PWD", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>eros.DATER.PROFILE_NAME</code>.
	 */
	public final TableField<DaterRecord, String> PROFILE_NAME = createField("PROFILE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>eros.DATER.NAME</code>.
	 */
	public final TableField<DaterRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(60), this, "");

	/**
	 * The column <code>eros.DATER.LAST_NAME</code>.
	 */
	public final TableField<DaterRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>eros.DATER.GENDER</code>.
	 */
	public final TableField<DaterRecord, DaterGender> GENDER = createField("GENDER", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.markovlabs.eros.model.enums.DaterGender.class), this, "");

	/**
	 * The column <code>eros.DATER.ACCEPT_CONSENT_PAGE_FLAG</code>.
	 */
	public final TableField<DaterRecord, Byte> ACCEPT_CONSENT_PAGE_FLAG = createField("ACCEPT_CONSENT_PAGE_FLAG", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * The column <code>eros.DATER.ACCEPTANCE_QUESTION_PAGE_FLAG</code>.
	 */
	public final TableField<DaterRecord, Byte> ACCEPTANCE_QUESTION_PAGE_FLAG = createField("ACCEPTANCE_QUESTION_PAGE_FLAG", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * The column <code>eros.DATER.PROFILE_CREATION_PAGE_FLAG</code>.
	 */
	public final TableField<DaterRecord, Byte> PROFILE_CREATION_PAGE_FLAG = createField("PROFILE_CREATION_PAGE_FLAG", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * The column <code>eros.DATER.REJECTED</code>.
	 */
	public final TableField<DaterRecord, Byte> REJECTED = createField("REJECTED", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * Create a <code>eros.DATER</code> table reference
	 */
	public Dater() {
		this("DATER", null);
	}

	/**
	 * Create an aliased <code>eros.DATER</code> table reference
	 */
	public Dater(String alias) {
		this(alias, DATER);
	}

	private Dater(String alias, Table<DaterRecord> aliased) {
		this(alias, aliased, null);
	}

	private Dater(String alias, Table<DaterRecord> aliased, Field<?>[] parameters) {
		super(alias, Eros.EROS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DaterRecord, Long> getIdentity() {
		return Keys.IDENTITY_DATER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DaterRecord> getPrimaryKey() {
		return Keys.KEY_DATER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DaterRecord>> getKeys() {
		return Arrays.<UniqueKey<DaterRecord>>asList(Keys.KEY_DATER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Dater as(String alias) {
		return new Dater(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Dater rename(String name) {
		return new Dater(name, null);
	}
}
