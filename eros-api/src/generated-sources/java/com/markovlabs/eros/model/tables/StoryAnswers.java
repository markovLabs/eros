/**
 * This class is generated by jOOQ
 */
package com.markovlabs.eros.model.tables;


import com.markovlabs.eros.model.Eros;
import com.markovlabs.eros.model.Keys;
import com.markovlabs.eros.model.enums.StoryAnswersAnswer;
import com.markovlabs.eros.model.tables.records.StoryAnswersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoryAnswers extends TableImpl<StoryAnswersRecord> {

	private static final long serialVersionUID = 1195405531;

	/**
	 * The reference instance of <code>eros.STORY_ANSWERS</code>
	 */
	public static final StoryAnswers STORY_ANSWERS = new StoryAnswers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<StoryAnswersRecord> getRecordType() {
		return StoryAnswersRecord.class;
	}

	/**
	 * The column <code>eros.STORY_ANSWERS.ID</code>.
	 */
	public final TableField<StoryAnswersRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.STORY_ANSWERS.DATER_ID</code>.
	 */
	public final TableField<StoryAnswersRecord, Long> DATER_ID = createField("DATER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.STORY_ANSWERS.STORY_ID</code>.
	 */
	public final TableField<StoryAnswersRecord, Long> STORY_ID = createField("STORY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.STORY_ANSWERS.ANSWER</code>.
	 */
	public final TableField<StoryAnswersRecord, StoryAnswersAnswer> ANSWER = createField("ANSWER", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.markovlabs.eros.model.enums.StoryAnswersAnswer.class), this, "");

	/**
	 * Create a <code>eros.STORY_ANSWERS</code> table reference
	 */
	public StoryAnswers() {
		this("STORY_ANSWERS", null);
	}

	/**
	 * Create an aliased <code>eros.STORY_ANSWERS</code> table reference
	 */
	public StoryAnswers(String alias) {
		this(alias, STORY_ANSWERS);
	}

	private StoryAnswers(String alias, Table<StoryAnswersRecord> aliased) {
		this(alias, aliased, null);
	}

	private StoryAnswers(String alias, Table<StoryAnswersRecord> aliased, Field<?>[] parameters) {
		super(alias, Eros.EROS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<StoryAnswersRecord, Long> getIdentity() {
		return Keys.IDENTITY_STORY_ANSWERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<StoryAnswersRecord> getPrimaryKey() {
		return Keys.KEY_STORY_ANSWERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<StoryAnswersRecord>> getKeys() {
		return Arrays.<UniqueKey<StoryAnswersRecord>>asList(Keys.KEY_STORY_ANSWERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<StoryAnswersRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<StoryAnswersRecord, ?>>asList(Keys.DATERS_ID_FK_9, Keys.STORY_ID_FK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryAnswers as(String alias) {
		return new StoryAnswers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public StoryAnswers rename(String name) {
		return new StoryAnswers(name, null);
	}
}
