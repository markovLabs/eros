/**
 * This class is generated by jOOQ
 */
package com.markovlabs.eros.model.tables;


import com.markovlabs.eros.model.Eros;
import com.markovlabs.eros.model.Keys;
import com.markovlabs.eros.model.tables.records.MessagesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Messages extends TableImpl<MessagesRecord> {

	private static final long serialVersionUID = -1888023386;

	/**
	 * The reference instance of <code>eros.MESSAGES</code>
	 */
	public static final Messages MESSAGES = new Messages();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MessagesRecord> getRecordType() {
		return MessagesRecord.class;
	}

	/**
	 * The column <code>eros.MESSAGES.FROM_DATER_ID</code>.
	 */
	public final TableField<MessagesRecord, Long> FROM_DATER_ID = createField("FROM_DATER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.MESSAGES.TO_DATER_ID</code>.
	 */
	public final TableField<MessagesRecord, Long> TO_DATER_ID = createField("TO_DATER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.MESSAGES.ID</code>.
	 */
	public final TableField<MessagesRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.MESSAGES.EVENT_ID</code>.
	 */
	public final TableField<MessagesRecord, Long> EVENT_ID = createField("EVENT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>eros.MESSAGES.CONTENT</code>.
	 */
	public final TableField<MessagesRecord, String> CONTENT = createField("CONTENT", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>eros.MESSAGES.TIME_RECEIVED</code>.
	 */
	public final TableField<MessagesRecord, Timestamp> TIME_RECEIVED = createField("TIME_RECEIVED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>eros.MESSAGES</code> table reference
	 */
	public Messages() {
		this("MESSAGES", null);
	}

	/**
	 * Create an aliased <code>eros.MESSAGES</code> table reference
	 */
	public Messages(String alias) {
		this(alias, MESSAGES);
	}

	private Messages(String alias, Table<MessagesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Messages(String alias, Table<MessagesRecord> aliased, Field<?>[] parameters) {
		super(alias, Eros.EROS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MessagesRecord, Long> getIdentity() {
		return Keys.IDENTITY_MESSAGES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MessagesRecord> getPrimaryKey() {
		return Keys.KEY_MESSAGES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MessagesRecord>> getKeys() {
		return Arrays.<UniqueKey<MessagesRecord>>asList(Keys.KEY_MESSAGES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MessagesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MessagesRecord, ?>>asList(Keys.DATER_ID_FK_7, Keys.DATER_ID_FK_8, Keys.EVENT_ID_FK_7);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Messages as(String alias) {
		return new Messages(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Messages rename(String name) {
		return new Messages(name, null);
	}
}
